TEST FOR MODULE 2-matrix_divided.py
===================================

import function:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check module doc:
>>> mod_doc = __import__('2-matrix_divided').__doc__
>>> len(mod_doc) > 1
True

Check function doc:
>>> func_doc = matrix_divided.__doc__
>>> len(func_doc) > 1
True

Divide a 2x3 matrix by 3:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Divide a 3x2 matrix by 2.5:
>>> matrix = [[1, 2], [3, 4], [5, 6]]
>>> matrix_divided(matrix, 2.5)
[[0.4, 0.8], [1.2, 1.6], [2.0, 2.4]]

Divide a 3x3 matrix by 0.5:
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 0.5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0], [14.0, 16.0, 18.0]]

Divide a 1x1 matrix by 10:
>>> matrix = [[5]]
>>> matrix_divided(matrix, 10)
[[0.5]]

Divide a 4x4 matrix by -2:
>>> matrix = [[-10, 20, -30, 40], [50, -60, 70, -80], [-90, 100, -110, 120], [130, -140, 150, -160]]
>>> matrix_divided(matrix, -2)
[[5.0, -10.0, 15.0, -20.0], [-25.0, 30.0, -35.0, 40.0], [45.0, -50.0, 55.0, -60.0], [-65.0, 70.0, -75.0, 80.0]]

Try dividing a non-matrix:
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Try dividing a matrix with rows of different sizes:
>>> matrix = [[1, 2], [3, 4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

Try dividing by a non-number:
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, "divisor")
Traceback (most recent call last):
    ...
TypeError: div must be a number

Try dividing by 0:
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

